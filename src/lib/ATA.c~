#include "DataPort.h"
#include "Screen.h"
#include "std/transform.h"
#define ATA_DATA        0x1F0
#define ATA_ERROR       0x1F1
#define ATA_SECCOUNT0   0x1F2
#define ATA_LBA0        0x1F3
#define ATA_LBA1        0x1F4
#define ATA_LBA2        0x1F5
#define ATA_HDDEVSEL    0x1F6
#define ATA_COMMAND     0x1F7
#define ATA_STATUS      0x1F7
#define ATA_ALTSTATUS   0x3F6
#define ATA_CONTROL     0x3F6

#define ATA_CMD_READ_PIO 0x20
#define ATA_SR_BSY  0x80
#define ATA_SR_DRQ  0x08


void ata_wait() {
    while (inb(ATA_STATUS) & ATA_SR_BSY);
    while (!(inb(ATA_STATUS) & ATA_SR_DRQ));
}


void ata_read_sector(uint32_t lba, uint8_t *buffer) {
    outb(ATA_HDDEVSEL, 0xE0 | ((lba >> 24) & 0x0F)); // Master + LBA
    outb(ATA_SECCOUNT0, 1);                          // Read 1 sector
    outb(ATA_LBA0, (uint8_t)(lba));
    outb(ATA_LBA1, (uint8_t)(lba >> 8));
    outb(ATA_LBA2, (uint8_t)(lba >> 16));
    outb(ATA_COMMAND, ATA_CMD_READ_PIO);             // Send read command

    ata_wait();                                      // Wait for ready

    for (int i = 0; i < 256; i++) {                  // 256 words = 512 bytes
        uint16_t data = inw(ATA_DATA);
        buffer[i*2] = data & 0xFF;
        buffer[i*2+1] = (data >> 8) & 0xFF;
    }
}
